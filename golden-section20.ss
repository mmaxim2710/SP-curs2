;golden-section20
(define a 2)
(define b 3);2.32415
(define (fun x)
 (set! x (- x (/ 108 109)))
 (+ (- (* 3 x) (* 4 (log x))) (- 0 5)
))
(define (golden-section-search a b)
 (let( (xmin (cond((>= b a)(golden-start a b))(#t(golden-start b a )))) ) (newline) xmin)
)
(define (golden-start a b)
 (let(
      (xa (+ a (* mphi (- b a))))
      (xb (- b (* mphi(- b a))))
     )
     (try a b xa (fun xa) xb (fun xb))
 )
)
(define mphi (/ (- 3 (sqrt 5)) 2))
(define (set1 a b xa xb ya yb)
  (set! b xb)
  (set! xb xa)
  (set! yb ya)
  (set! xa (+ a (* mphi(- b a))))
  (try a b xa (fun xa) xb yb)
 )
(define (set2 a b xa xb ya yb)
  (set! a xa)
  (set! xa xb)
  (set! ya yb)
  (set! xb (- b (* mphi(- b a))))
  (try a b xa ya xb (fun xb))
 )
(define (try a b xa ya xb yb)
 (cond((close-enough? a b)
      (/ (+ a b) 2))
      (#t (let() (display "+")
             (cond((>= yb ya)(set1 a b xa xb ya yb))
                  (#t (set2 a b xa xb ya yb))

             );cond...
      );let...
 ));if..
)
(define (close-enough? x y)
  (>= tolerance (abs (- x y))))
(define tolerance (/ 1 100000))
(define xmin 0)
(set! xmin(golden-section-search a b))
  (display"interval=\t[")
  (display a)
  (display" , ")
  (display b)
  (display"]\n")
  (display"xmin=\t\t")
xmin
  (display"f(xmin)=\t")
(fun xmin)
